---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: Namespace
metadata:
  name: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO: We should probably split between the SA running the trigger and the SA
# running the pipelinerun as code

apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipelines-as-code-controller
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipelines-as-code-controller-role
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipelines-as-code-binding
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
subjects:
  - kind: ServiceAccount
    name: pipelines-as-code-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipelines-as-code-controller-role
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openshift-pipeline-as-code-clusterrole
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
rules:
  # Permissions to list repositories on cluster
  - apiGroups: [""]
    resources: ["namespaces", "pods", "pods/log"]
    verbs: ["get", "list", "watch"]
  # Allow getting, creating and deleting secrets in namespace
  # This is to be able to attach secret to repository on webhook.
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "delete"]
  # Permissions to list repositories on cluster
  - apiGroups: ["pipelinesascode.tekton.dev"]
    resources: ["repositories"]
    verbs: ["create", "get", "list", "update"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns"]
    verbs: ["get", "delete", "list", "create", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["taskruns"]
    verbs: ["get"]
  - apiGroups: ["route.openshift.io"]
    resources: ["routes"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipelines-as-code-clusterbinding
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
subjects:
- kind: ServiceAccount
  name: pipelines-as-code-controller
  namespace: pipelines-as-code
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-pipeline-as-code-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipelines-as-code-info
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
rules:
  # All system:authenticated users needs to have access
  # of the pipelines-as-code-info ConfigMap even if they don't
  # have access to the other resources present in the
  # installed namespace.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["pipelines-as-code-info"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipelines-as-code-info
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
subjects:
  - kind: Group
    name: system:authenticated
    apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipelines-as-code-info
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: repositories.pipelinesascode.tekton.dev
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
spec:
  group: pipelinesascode.tekton.dev
  versions:
    - name: v1alpha1
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - name: Succeeded
          type: string
          jsonPath: ".pipelinerun_status[-1].conditions[?(@.type==\"Succeeded\")].status"
        - name: Reason
          type: string
          jsonPath: ".pipelinerun_status[-1].conditions[?(@.type==\"Succeeded\")].reason"
        - name: StartTime
          type: date
          jsonPath: ".pipelinerun_status[-1].startTime"
        - name: CompletionTime
          type: date
          jsonPath: ".pipelinerun_status[-1].completionTime"
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          x-kubernetes-preserve-unknown-fields: true
          description: Schema for the repository API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/  api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of Repository
              properties:
                url:
                  description: Repository URL
                  type: string
                git_provider:
                  type: object
                  properties:
                    url:
                      description: The Git provider api url
                      type: string
                    user:
                      description: The Git provider api user
                      type: string
                    secret:
                      type: object
                      properties:
                        key:
                          type: string
                          description: "Key inside the secret"
                          default: "provider.token"
                        name:
                          type: string
                          description: "The secret name"
                    webhook_secret:
                      type: object
                      properties:
                        key:
                          type: string
                          description: "Key inside the secret"
                          default: "webhook.secret"
                        name:
                          type: string
                          description: "The secret name"

              type: object
          type: object
  scope: Namespaced
  names:
    plural: repositories
    singular: repository
    kind: Repository
    shortNames:
    - repo
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
data:
  # The number of days kept for pipelinerun inside pipelines-as-code namespace
  max-keep-days: "5"

  # The application name, you can customize this label
  application-name: "Pipelines as Code CI"

  # Whether to automatically create a secret with the token to be use by git-clone
  secret-auto-create: "true"

  # Tekton HUB API urls
  hub-url: "https://api.hub.tekton.dev/v1"

  # Whether to allow fetching remote tasks
  remote-tasks: "true"

  # Since public bitbucket doesn't have the concept of Secret, we need to be
  # able to secure the request by querying https://ip-ranges.atlassian.com/,
  # this only happen for public bitbucket (ie: when provider.url is not set in
  # repository spec). If you want to override this, you need to bear in mind
  # this could be a security issue, a malicious user can send a PR to your repo
  # with a modification to your PipelineRun that would grab secrets, tunnel or
  # others and then send a malicious webhook payload to the controller which
  # look like a authorized owner has send the PR to run it..
  bitbucket-cloud-check-source-ip: "true"

  # Add extra IPS (ie: 127.0.0.1) or networks (127.0.0.0/16) separated by commas.
  bitbucket-cloud-additional-source-ip: ""

  # Global setting for pipelinerun timeout regardless of how the user
  # pipelinerun timeout.
  # default-pipelinerun-timeout: "2h"

kind: ConfigMap
metadata:
  name: pipelines-as-code
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/part-of: pipelines-as-code
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This configmap is filled by bootstrap command or repo create command
# GitHub App or webhook which ever is configured first, is added as
# provider and later this is checked before configuring any of them
# so that we don't configure only one of them is configured with PAC

apiVersion: v1
data:
  # pipelines as code controller version
  version: "devel"

  # controller url to be used for configuring webhook using cli
  controller-url: ""

  # display the configured provider on the platform
  # only one provider type to be configured at a time
  # eg. if GitHub App is configured, then webhooks should not be configured
  provider: ""

kind: ConfigMap
metadata:
  name: pipelines-as-code-info
  namespace: pipelines-as-code
  labels:
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/part-of: pipelines-as-code
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipelines-as-code-controller
  namespace: pipelines-as-code
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: pipelines-as-code
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: pipelines-as-code
        app.kubernetes.io/version: "0.8.0"
    spec:
      serviceAccountName: pipelines-as-code-controller
      containers:
        - name: pac-controller
          image: "ghcr.io/openshift-pipelines/pipelines-as-code:stable"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K_METRICS_CONFIG
              value: '{"Domain":"pipelinesascode.tekton.dev/controller","Component":"controller","PrometheusPort":0,"PrometheusHost":"","ConfigMap":{}}'
---
# Copyright 2022 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: Service
metadata:
  name: pipelines-as-code-controller
  namespace: pipelines-as-code
spec:
  ports:
  - name: http-listener
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: pipelines-as-code
